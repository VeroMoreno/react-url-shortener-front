{"version":3,"sources":["components/Button/button.style.js","components/Button/Button.js","components/Input/input.style.js","components/Input/Input.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonWrapper","styled","button","Button","text","onClick","FormWrapper","form","StyledInput","input","BoxWrapper","div","Input","useState","urlShort","setUrlShort","showBox","setShowBox","handleSubmit","event","a","preventDefault","validator","isURL","target","urlInput","value","require_protocol","alert","urlOriginal","elements","fetch","method","headers","body","JSON","stringify","response","json","data","console","log","Box","copied","setCopied","url","rel","href","navigator","clipboard","writeText","then","onSubmit","type","id","placeholder","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAEMA,EAAgBC,IAAOC,OAAV,gQ,OCWJC,EAVA,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QACrB,OACE,cAACL,EAAD,CACAK,QAASA,EADT,SAGE,+BAAOD,OCNPE,EAAcL,IAAOM,KAAV,wKASXC,EAAcP,IAAOQ,MAAV,4JAWXC,EAAaT,IAAOU,IAAV,8ZCwDDC,EAzED,WACZ,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,yDACnBD,EAAME,iBACWC,IAAUC,MAAMJ,EAAMK,OAAOC,SAASC,MAAO,CAC5DC,kBAAkB,IAHD,gBAMjBC,MAAM,mDANW,8BAQXC,EAAcV,EAAMK,OAAOM,SAASL,SAASC,MARlC,SASMK,MAAM,wBAAyB,CACpDC,OAAQ,OACRC,QAAU,CACR,eAAgB,mBAChB,OAAU,oBAEZC,KAAMC,KAAKC,UAAW,CAACP,kBAfR,cASXQ,EATW,iBAiBEA,EAASC,OAjBX,QAiBXC,EAjBW,OAkBjBC,QAAQC,IAAI,OAAQF,EAAKzB,UACzBG,GAAW,GACXF,EAAYwB,EAAKzB,UApBA,4CAAH,sDAwBZ4B,EAAM,SAAC5B,GACX,MAA4BD,oBAAS,GAArC,mBAAO8B,EAAP,KAAeC,EAAf,KACQC,EAAQ/B,EAAR+B,IACR,GAAI/B,EACF,OACE,eAACJ,EAAD,yCAEE,oBACEc,OAAO,SACPsB,IAAI,sBACJC,KAAI,gCAA2BF,GAHjC,8CAGmEA,MAEnE,cAAC,EAAD,CACEzC,KAAMuC,EAAS,UAAY,OAC3BtC,QAAS,WACP2C,UAAUC,UAAUC,UAApB,gCAAuDL,IACtDM,MAAK,WACJP,GAAU,aAUxB,OACE,qCACE,eAACtC,EAAD,CAAa8C,SAAUlC,EAAvB,UACE,cAACV,EAAD,CACE6C,KAAK,OACLC,GAAG,WACHC,YAAY,sBAEd,cAAC,EAAD,CACEnD,KAAK,WACLiD,KAAK,cAGRrC,GAAW,cAAC0B,EAAD,CAAKG,IAAK/B,QC9Db0C,EAPH,kBACV,0BAASC,UAAU,YAAnB,UACE,gDACA,cAAC,EAAD,QCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.d4487870.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst ButtonWrapper = styled.button`\n  color:white;\n  padding: 10px;\n  cursor: pointer;\n  border: none;\n  width: 70px;\n  overflow: visible;\n  background: rgb(255 255 255 / 20%);\n  transition: 0.3s;\n  &:hover {\n    background: rgb(255 255 255 / 10%);\n  }\n`;\n\nexport { ButtonWrapper };\n","import React from \"react\";\nimport { ButtonWrapper } from './button.style';\n\nconst Button = ({text, onClick}) => {\n  return (\n    <ButtonWrapper\n    onClick={onClick}\n    >\n      <span>{text}</span>\n    </ButtonWrapper>\n  );\n};\n\nexport default Button;","import styled from 'styled-components';\n\nconst FormWrapper = styled.form`\n  display:flex;\n  flex-direction:row;\n  border:1px solid rgb(255 255 255 / 19%);\n  padding: 4px;\n  margin: 20px auto;\n  width: 600px;\n`;\n\nconst StyledInput = styled.input`\n  flex-grow:2;\n  border:none;\n  padding: 0 20px;\n  background-color:white;\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst BoxWrapper = styled.div`\n  color: white;\n  position:relative;\n  background: rgb(117 71 97 / 50%);\n  display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 0 0 20px;\n  a {\n    color: pink;\n    font-weight: bold;\n    margin: 0 10px;\n  }\n  .copied {\n    font-family: 'La Belle Aurore', cursive;\n    font-size: 2rem;\n    position:absolute;\n    right:-66px;\n  }\n`;\n\nexport { FormWrapper, StyledInput, BoxWrapper };\n","import React, { useState } from \"react\";\nimport validator from 'validator';\nimport Button from '../Button/Button'\nimport { FormWrapper, StyledInput, BoxWrapper } from './input.style';\n\nconst Input = () => {\n  const [urlShort, setUrlShort] = useState();\n  const [showBox, setShowBox] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const validUrl = validator.isURL(event.target.urlInput.value, {\n      require_protocol: true\n    });\n    if (!validUrl) {\n      alert('Please enter a valid url with http(s) protocol.');\n    } else {\n      const urlOriginal = event.target.elements.urlInput.value;\n      const response = await fetch(`http://localhost:3003`, {\n        method: 'POST',\n        headers : {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify( {urlOriginal} )\n      });\n      const data = await response.json();\n      console.log(\"data\", data.urlShort);\n      setShowBox(true)\n      setUrlShort(data.urlShort);\n    }\n  }\n\n  const Box = (urlShort) => {\n    const [copied, setCopied] = useState(false);\n    const { url } = urlShort;\n    if (urlShort) {\n      return (\n        <BoxWrapper>\n          Here is your shortened url:\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={`http://localhost:3003/${url}`}> {`http://localhost:3003/${url}`}\n          </a>\n          <Button\n            text={copied ? 'Copied!' : 'Copy'}\n            onClick={() => {\n              navigator.clipboard.writeText(`http://localhost:3003/${url}`)\n              .then(() => {\n                setCopied(true);\n              })\n            }}\n          />\n          {/*error message*/}\n        </BoxWrapper>\n      )\n    }\n  }\n\n  return (\n    <>\n      <FormWrapper onSubmit={handleSubmit}>\n        <StyledInput\n          type=\"text\"\n          id=\"urlInput\"\n          placeholder=\"Put your url here\"\n        />\n        <Button\n          text=\"Shortify\"\n          type=\"submit\"\n        />\n      </FormWrapper>\n      {showBox && <Box url={urlShort}/>}\n    </>\n  );\n}\n\nexport default Input;","import React from 'react';\nimport './App.css';\nimport Input from './components/Input/Input';\n\nconst App = () => (\n  <section className=\"container\">\n    <h1>Fuji Shortener</h1>\n    <Input/>\n  </section>\n)\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); // pass console.log to see results.\n"],"sourceRoot":""}